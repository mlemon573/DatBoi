import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 * A dialog screen for controlling whether or not the Whiteboard is closed.
 */
public class ExitDialog extends JDialog
{
   //GUI elements
   private JPanel contentPane;
   private JButton buttonYes;
   private JButton buttonNo;
   private JPanel panelDirty;
   private JPanel panelNotDirty;
   private JPanel panelClient;
   private JPanel panelServer;

   private Whiteboard whiteboard;

   /**
    * Constructor for the Exit Dialog
    *
    * @param whiteboard - the whiteboard that is being exited from.
    * @param dirty      - whether or not something has been changed since it has been
    *                   saved.
    * @param mode       - whether or not the user is exiting as a client or a server.
    */
   public ExitDialog(Whiteboard whiteboard, boolean dirty, String mode)
   {
      $$$setupUI$$$();
      this.whiteboard = whiteboard;

      boolean isClient = "Client".equals(mode);
      boolean isServer = "Server".equals(mode);

      panelDirty.setVisible(dirty);
      panelNotDirty.setVisible(!dirty);
      panelClient.setVisible(isClient);
      panelServer.setVisible(isServer);

      setTitle("Exit?");
      setContentPane(contentPane);
      setModal(true);
      getRootPane().setDefaultButton(buttonYes);

      buttonYes.addActionListener(e -> onOK());
      buttonNo.addActionListener(e -> onCancel());

      setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
      addWindowListener(new WindowAdapter()
      {
         public void windowClosing(WindowEvent e) {onCancel();}
      });

      contentPane.registerKeyboardAction(e -> onCancel(), KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);

   }

   /**
    * Closes the Whiteboard frame.
    */
   private void onOK()
   {
      whiteboard.dispose();
      dispose();
   }

   /**
    * Closes the Exit Dialog frame.
    */
   private void onCancel()
   {
      dispose();
   }

   /**
    * Method generated by IntelliJ IDEA GUI Designer
    * >>> IMPORTANT!! <<<
    * DO NOT edit this method OR call it in your code!
    */
   private void $$$setupUI$$$()
   {
      contentPane = new JPanel();
      contentPane.setLayout(new GridBagLayout());
      final JPanel panel1 = new JPanel();
      panel1.setLayout(new GridBagLayout());
      GridBagConstraints gbc;
      gbc = new GridBagConstraints();
      gbc.gridx = 0;
      gbc.gridy = 1;
      gbc.weightx = 1.0;
      gbc.anchor = GridBagConstraints.EAST;
      gbc.fill = GridBagConstraints.VERTICAL;
      gbc.insets = new Insets(5, 5, 5, 5);
      contentPane.add(panel1, gbc);
      buttonYes = new JButton();
      buttonYes.setText("Yes");
      gbc = new GridBagConstraints();
      gbc.gridx = 0;
      gbc.gridy = 0;
      gbc.weightx = 1.0;
      gbc.weighty = 1.0;
      gbc.fill = GridBagConstraints.HORIZONTAL;
      gbc.insets = new Insets(0, 0, 0, 5);
      panel1.add(buttonYes, gbc);
      buttonNo = new JButton();
      buttonNo.setText("No");
      gbc = new GridBagConstraints();
      gbc.gridx = 1;
      gbc.gridy = 0;
      gbc.weightx = 1.0;
      gbc.weighty = 1.0;
      gbc.fill = GridBagConstraints.HORIZONTAL;
      gbc.insets = new Insets(0, 5, 0, 0);
      panel1.add(buttonNo, gbc);
      final JPanel panel2 = new JPanel();
      panel2.setLayout(new GridBagLayout());
      gbc = new GridBagConstraints();
      gbc.gridx = 0;
      gbc.gridy = 0;
      gbc.weightx = 1.0;
      gbc.weighty = 1.0;
      gbc.fill = GridBagConstraints.BOTH;
      gbc.insets = new Insets(5, 5, 0, 5);
      contentPane.add(panel2, gbc);
      panelClient = new JPanel();
      panelClient.setLayout(new GridBagLayout());
      panelClient.setVisible(false);
      gbc = new GridBagConstraints();
      gbc.gridx = 0;
      gbc.gridy = 3;
      gbc.fill = GridBagConstraints.BOTH;
      panel2.add(panelClient, gbc);
      final JLabel label1 = new JLabel();
      label1.setText("You are connected as a cient.");
      gbc = new GridBagConstraints();
      gbc.gridx = 0;
      gbc.gridy = 0;
      panelClient.add(label1, gbc);
      final JLabel label2 = new JLabel();
      label2.setText("Are you sure you want to quit?");
      gbc = new GridBagConstraints();
      gbc.gridx = 0;
      gbc.gridy = 4;
      panel2.add(label2, gbc);
      panelServer = new JPanel();
      panelServer.setLayout(new GridBagLayout());
      panelServer.setVisible(false);
      gbc = new GridBagConstraints();
      gbc.gridx = 0;
      gbc.gridy = 2;
      gbc.fill = GridBagConstraints.BOTH;
      panel2.add(panelServer, gbc);
      final JLabel label3 = new JLabel();
      label3.setText("You are hosting as a server.");
      gbc = new GridBagConstraints();
      gbc.gridx = 0;
      gbc.gridy = 0;
      panelServer.add(label3, gbc);
      panelNotDirty = new JPanel();
      panelNotDirty.setLayout(new GridBagLayout());
      panelNotDirty.setVisible(false);
      gbc = new GridBagConstraints();
      gbc.gridx = 0;
      gbc.gridy = 1;
      gbc.fill = GridBagConstraints.BOTH;
      panel2.add(panelNotDirty, gbc);
      final JLabel label4 = new JLabel();
      label4.setText("The file has been saved.");
      gbc = new GridBagConstraints();
      gbc.gridx = 0;
      gbc.gridy = 0;
      panelNotDirty.add(label4, gbc);
      panelDirty = new JPanel();
      panelDirty.setLayout(new GridBagLayout());
      panelDirty.setVisible(false);
      gbc = new GridBagConstraints();
      gbc.gridx = 0;
      gbc.gridy = 0;
      gbc.fill = GridBagConstraints.BOTH;
      panel2.add(panelDirty, gbc);
      final JLabel label5 = new JLabel();
      label5.setText("The file has not been saved.");
      gbc = new GridBagConstraints();
      gbc.gridx = 0;
      gbc.gridy = 0;
      panelDirty.add(label5, gbc);
   }

   /** @noinspection ALL */
   public JComponent $$$getRootComponent$$$() { return contentPane; }
}
